CLASS:: CXMenu
summary:: a basic nav menu
categories:: Libraries>crucial>deprecated
related:: Classes/PopUpMenu

DESCRIPTION::  This is an old class.  Pending deprecation.

A pop up menu that does its action and closes itself after you select an item.

The difference between this and PopUpMenu is that here there are separate functions for
each menu item, and with PopUpMenu there is one action.

code::

(
m = CXMenu(
	\soup->{ "soup".postln; },
	\pork->{ "pork".postln; },
	\duck->{ "duck".postln; },
	\tiramisu->{ "tiramisu".postln; }
);


m.gui(nil);

)

(
m = CXMenu(
	\myName->{ "you hit myName".postln; },
	\yourName->{ "you hit yourName".postln; }
);

m.closeOnSelect = false;

m.gui;

)

::

CLASSMETHODS::

METHOD:: new


argument::  ... nameFuncs


returns::

METHOD:: newWith


argument:: nameFuncs


returns::


INSTANCEMETHODS::

METHOD:: nameFuncs


argument:: nf


returns::

METHOD:: layout


returns::

METHOD:: backColor


returns::

METHOD:: stringColor


returns::

METHOD:: closeOnSelect


returns::

METHOD:: gui


argument:: parent


argument:: windowWidth


argument:: height


argument:: argButtonWidth


returns::

METHOD:: guiBody


argument:: resize


returns::

METHOD:: add


argument:: nf


returns::

METHOD:: addToGui


argument:: nf


argument:: resize


returns::

METHOD:: resize


argument:: r


returns::

METHOD:: doAction


returns::

METHOD:: keyDownResponder


returns::

METHOD:: focus


returns::

METHOD:: focusOn


argument:: f


returns::

EXAMPLES::

On another layout

code::
(
Sheet({ arg f;
	CXLabel(f,"partials:");
	f.startRow;
	m = CXMenu.newWith(
		Array.fill(15,{ arg i;
			i.asString.asSymbol -> { i.postln }
		})
	);
	m.closeOnSelect = false;
	m.gui(f);
})
)
::

You can add things to the menu above
m.add(\more->{ "more".postln; });


On a normal Window

code::
(

w = GUI.window.new;
w.front;

x = CXMenu( \a -> { "a".postln },\b -> { "b".postln },\c -> { "c".postln });
x.closeOnSelect = false;
x.gui(w);

)
::

Note that the arrow keys work to navigate once you are focused on any of the buttons.

code::
(
m = CXMenu(
	\myName->{ "you hit myName".postln; },
	\yourName->{ "you hit yourName".postln; }
);

m.closeOnSelect = false;

m.gui;

)
(
20.do({
	m.add(\more->{ "more".postln; });
})

)
::

