CLASS:: MultiChanRecorder
summary:: a utility for recording multiple Busses to multiple time-aligned files
categories:: Files
related:: Classes/PlayerRecorder

DESCRIPTION:: This is a utility for recording an array of supplied Busses to multiple files.  Recording can be paused/resumed. The busses can be optionally mixed and monitored through the main outs.

code::
b = [
	Bus(\audio,2,2),
	Bus(\audio,4,2),
	Bus(\audio,6,2)
	];

m = MultiChanRecorder(b);

// each file is named: basePath + _chanNum
// if basePath is nil then recordings go into the global recordings directory
m.prepareForRecord(basePath);

// mix the busses onto the main outs if desired
m.monitor;

m.record;
// record may also specify a start time :
// m.record(atTime)
// see atTime help

m.stop;
::


CLASSMETHODS::

METHOD:: new


argument:: busses


returns::


INSTANCEMETHODS::

METHOD:: limit
boolean

By default it uses a Limiter on each channel.  Set limit to false to defeat this.

returns::

METHOD:: path


returns::

METHOD:: recHeaderFormat


returns::

METHOD:: recSampleFormat


returns::

METHOD:: init


argument:: buses


returns::

METHOD:: prepareForRecord


argument:: basePath


returns::

METHOD:: isPrepared


returns::

METHOD:: record


argument:: atTime
see link::Guides/atTime::


returns::

METHOD:: isRecording


returns::

METHOD:: pauseRecording


argument:: atTime
see link::Guides/atTime::


returns::

METHOD:: stop


returns::

METHOD:: monitor


argument:: boo


returns::

METHOD:: isMonitoring


returns::

METHOD:: cmdPeriod


returns::



