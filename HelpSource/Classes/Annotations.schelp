CLASS:: Annotations
summary:: stores names and notations for Nodes, identifying the Node's owner and its purpose
categories:: Libraries>crucial>Debugging
related:: Classes/AnnotatedDebugNodeWatcher

DESCRIPTION:: Helps in debugging to identify Synths and Groups by naming them. For example a Player can annotate a group that it created as "efxGroup".  Then in debugging views it will show that name.

All Players annotate their nodes.

This is used in Insp and ServerNodeTree.

You don't have to do anything with this class, its used internally.

But feel free to try annotating your Nodes so you can see them in debug views.



CLASSMETHODS::

METHOD:: put


argument:: things


argument::  ... notes


returns::

METHOD:: at


argument:: thing


returns::

METHOD:: register


argument:: object


returns::

METHOD:: unregister


argument:: object


returns::

METHOD:: find


argument::  ... clauses


returns::

METHOD:: findBus


argument:: index


argument:: rate


returns::

METHOD:: findNode


argument:: nodeID


returns::

METHOD:: guiFindNode


argument:: nodeID


argument:: layout


returns::

METHOD:: guiFindBus


argument:: index


argument:: rate


argument:: layout


returns::

METHOD:: prAnnotate


argument:: thing


argument:: notes


returns::

METHOD:: packNotes


argument:: notes


returns::

METHOD:: unpackNotes


argument:: notes


returns::

METHOD:: initClass


returns::

METHOD:: new


argument:: weakRef


returns::


INSTANCEMETHODS::

METHOD:: dereference


returns::



